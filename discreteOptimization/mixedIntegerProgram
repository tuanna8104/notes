Same format as Linear Programming, but some of variables is integer.

Model:
- Decision Variables
- Constraints
- Objectives

Branch and bound:
- Bounding: finding an optimistic relaxation
- Branching: splitting the problem in subproblems

Linear relaxation:
- Worse than best => prune
- Integral => update best
- Otherwise, two subproblems: x <= floor(f) and x>= ceil(f), repeat algorithm on the subproblems

Modeling techniques
- need good linear relaxation

Big-M Transformation
x <> y => x <= y -1 || x >= y + 1 => x <= y - 1 + bM && x >= y + 1 + (1-b)M (b: 0 || 1) (M: big integer)
=> not good linear relaxation for graph coloring
=> Better: 
x(b=0) + y(b=0) <= 1
x(b=1) + y(b=1) <= 1
x(b=2) + y(b=2) <= 1
x(b=3) + y(b=3) <= 1

Cutting Planes:
- valid: not remove any feasible solution
- helps: cuts the optimal solution to the linear relaxation
How to find these cuts:
- Look inside the tableau: Gomory Cut: x1 + Sum(a1j*xj) = b1, 
if b1 is not a integer, we have: x1 + Sum(floor(a1j)*xj) <= floor(b1)
=> have a new constraint: sum((a1j - floor(a1j))*xj) >= b1 - floor(b1)
With j is these artifical variables
Solve the linear relaxtion => choose a row whose constant is fractional => Add the Goromy Cut => dual simplex to obtain feasibilty
=> Iterate => Integral or no feasible solution

Polyhedral cuts
+ Cuts that represent the facets of the convex hull of the integer solutions
=> Derived from the structure of constraints, not based on information in the tableau
=> Valid, as strong as possible (proof: use affine independence)
