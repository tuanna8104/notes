Same format as Linear Programming, but some of variables is integer.

Model:
- Decision Variables
- Constraints
- Objectives

Branch and bound:
- Bounding: finding an optimistic relaxation
- Branching: splitting the problem in subproblems

Linear relaxation:
- Worse than best => prune
- Integral => update best
- Otherwise, two subproblems: x <= floor(f) and x>= ceil(f), repeat algorithm on the subproblems

Modeling techniques
- need good linear relaxation

Big-M Transformation
x <> y => x <= y -1 || x >= y + 1 => x <= y - 1 + bM && x >= y + 1 = (1-b)M (b: 0 || 1) (M: big integer)
=> not good linear relaxation for graph coloring
=> Better: 
x(b=0) + y(b=0) <= 1
x(b=1) + y(b=1) <= 1
x(b=2) + y(b=2) <= 1
x(b=3) + y(b=3) <= 1

Cutting Planes:
- valid: not remove any feasible solution
- helps: cuts the optimal solution to the linear relaxation
How to find these cuts:
- Look inside the tableau: Gomory Cut: x1 + Sum(a1j*xj) = b1, 
if b1 is not a integer, we have: x1 + Sum(floor(a1j)*xj) <= floor(b1)
=> have a new constraint: sum((a1j - floor(a1j))*xj) >= b1 - floor(b1)
With j is these artifical variables
Solve the linear relaxtion => choose a row whose constant is fractional => Add the Goromy Cut => dual simplex to obtain feasibilty
=> Iterate => Integral or no feasible solution

Polyhedral cuts
+ Cuts that represent the facets of the convex hull of the integer solutions
=> Derived from the structure of constraints, not based on information in the tableau
=> Valid, as strong as possible (proof: use affine independence)

Cover
- a(j)*b(j) <= b, C âŠ† N = [1,..., n] sum(a(j)) > b, j in C. 
- minimal cover: C - {j} not cover for any j
Cover Cut: sum(x(j)) <= C - 1 j in C
Strong Cover Cut:sum(x(j)) <= C - 1 j in E(C). E(C) = C add {j, a(j)>= a(i) with every i in C}

Branch and Cut:
1. Formulate the application as MIP
2. Linear relaxation => intergal: terminate
3. Not, find a polyhedral cut, if find => 2
4. Branch

The Separation Problem
1. Solution x* for linear relaxation possibly enhanced by cuts
2. Where there exists a cover cut that cut x*
sum(x(j)) <= C - 1  => sum(1 - x(j)) >= 1
So, if we have sum(1-x*(j)) < 1 (1) && sum(a(j)) > b (2)
=> Exists a cover cut that cut x*
=> A problem: Find min (1-x*)z While az > b. If min < 1 => all variables = 1 is a cover

Seven Bridges of Konigsberg

TSP => MIP: decision variables, constraints, objectives
- x(e) = 0 (Edge not in solution), x(e) = 1 (Edge in solution) x{1....n} = x(1) + x(2) + ... + x(n)
- First Model:
min sum(x(e)*c(e)) subject to x{edgeTo(v)) = 2, x{edgeIn{S}} < |S| - 1 (S is a subchild of V), x(e) = {0, 1} 

- There are too many subTour constraint => Branch and Cut: seperation on demand 
x{edgeIn{S}} < |S| - 1 => x{edgeTo(S)) >= 2 (S is a subchild of V)
Build a graph G* ={V,E} w(e) = x*(e)
